{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\limup\\\\Documents\\\\teste\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\limup\\\\Documents\\\\teste\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\limup\\\\Documents\\\\teste\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\limup\\\\Documents\\\\teste\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport var Subscription = /*#__PURE__*/function () {\n  function Subscription(initialTeardown) {\n    _classCallCheck(this, Subscription);\n\n    this.initialTeardown = initialTeardown;\n    this.closed = false;\n    this._parentage = null;\n    this._finalizers = null;\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var errors;\n\n      if (!this.closed) {\n        this.closed = true;\n        var _parentage = this._parentage;\n\n        if (_parentage) {\n          this._parentage = null;\n\n          if (Array.isArray(_parentage)) {\n            var _iterator = _createForOfIteratorHelper(_parentage),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var parent = _step.value;\n                parent.remove(this);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          } else {\n            _parentage.remove(this);\n          }\n        }\n\n        var initialFinalizer = this.initialTeardown;\n\n        if (isFunction(initialFinalizer)) {\n          try {\n            initialFinalizer();\n          } catch (e) {\n            errors = e instanceof UnsubscriptionError ? e.errors : [e];\n          }\n        }\n\n        var _finalizers = this._finalizers;\n\n        if (_finalizers) {\n          this._finalizers = null;\n\n          var _iterator2 = _createForOfIteratorHelper(_finalizers),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var finalizer = _step2.value;\n\n              try {\n                execFinalizer(finalizer);\n              } catch (err) {\n                errors = errors !== null && errors !== void 0 ? errors : [];\n\n                if (err instanceof UnsubscriptionError) {\n                  errors = [].concat(_toConsumableArray(errors), _toConsumableArray(err.errors));\n                } else {\n                  errors.push(err);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n\n        if (errors) {\n          throw new UnsubscriptionError(errors);\n        }\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(teardown) {\n      var _a;\n\n      if (teardown && teardown !== this) {\n        if (this.closed) {\n          execFinalizer(teardown);\n        } else {\n          if (teardown instanceof Subscription) {\n            if (teardown.closed || teardown._hasParent(this)) {\n              return;\n            }\n\n            teardown._addParent(this);\n          }\n\n          (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n        }\n      }\n    }\n  }, {\n    key: \"_hasParent\",\n    value: function _hasParent(parent) {\n      var _parentage = this._parentage;\n      return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);\n    }\n  }, {\n    key: \"_addParent\",\n    value: function _addParent(parent) {\n      var _parentage = this._parentage;\n      this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n  }, {\n    key: \"_removeParent\",\n    value: function _removeParent(parent) {\n      var _parentage = this._parentage;\n\n      if (_parentage === parent) {\n        this._parentage = null;\n      } else if (Array.isArray(_parentage)) {\n        arrRemove(_parentage, parent);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(teardown) {\n      var _finalizers = this._finalizers;\n      _finalizers && arrRemove(_finalizers, teardown);\n\n      if (teardown instanceof Subscription) {\n        teardown._removeParent(this);\n      }\n    }\n  }]);\n\n  return Subscription;\n}();\n\nSubscription.EMPTY = function () {\n  var empty = new Subscription();\n  empty.closed = true;\n  return empty;\n}();\n\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n  return value instanceof Subscription || value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe);\n}\n\nfunction execFinalizer(finalizer) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}","map":{"version":3,"sources":["C:/Users/limup/Documents/teste/MerchanCountries/MerchanCountriesAngular/MerchanCountriesAngular/ClientApp/node_modules/rxjs/dist/esm/internal/Subscription.js"],"names":["isFunction","UnsubscriptionError","arrRemove","Subscription","initialTeardown","closed","_parentage","_finalizers","errors","Array","isArray","parent","remove","initialFinalizer","e","finalizer","execFinalizer","err","push","teardown","_a","_hasParent","_addParent","includes","_removeParent","EMPTY","empty","EMPTY_SUBSCRIPTION","isSubscription","value","add","unsubscribe"],"mappings":"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","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown: initialFinalizer } = this;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _finalizers } = this;\n            if (_finalizers) {\n                this._finalizers = null;\n                for (const finalizer of _finalizers) {\n                    try {\n                        execFinalizer(finalizer);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _finalizers } = this;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}