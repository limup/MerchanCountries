{"ast":null,"code":"import { observeNotification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function dematerialize() {\n  return operate(function (source, subscriber) {\n    source.subscribe(createOperatorSubscriber(subscriber, function (notification) {\n      return observeNotification(notification, subscriber);\n    }));\n  });\n}","map":{"version":3,"sources":["C:/Users/limup/Documents/teste/MerchanCountries/MerchanCountriesAngular/MerchanCountriesAngular/ClientApp/node_modules/rxjs/dist/esm/internal/operators/dematerialize.js"],"names":["observeNotification","operate","createOperatorSubscriber","dematerialize","source","subscriber","subscribe","notification"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,iBAApC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOF,OAAO,CAAC,UAACG,MAAD,EAASC,UAAT,EAAwB;AACnCD,IAAAA,MAAM,CAACE,SAAP,CAAiBJ,wBAAwB,CAACG,UAAD,EAAa,UAACE,YAAD;AAAA,aAAkBP,mBAAmB,CAACO,YAAD,EAAeF,UAAf,CAArC;AAAA,KAAb,CAAzC;AACH,GAFa,CAAd;AAGH","sourcesContent":["import { observeNotification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function dematerialize() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}