{"ast":null,"code":"import { EmptyError } from '../util/EmptyError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function throwIfEmpty() {\n  var errorFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultErrorFactory;\n  return operate(function (source, subscriber) {\n    var hasValue = false;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      hasValue = true;\n      subscriber.next(value);\n    }, function () {\n      return hasValue ? subscriber.complete() : subscriber.error(errorFactory());\n    }));\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}","map":{"version":3,"sources":["C:/Users/limup/Documents/teste/MerchanCountries/MerchanCountriesAngular/MerchanCountriesAngular/ClientApp/node_modules/rxjs/dist/esm/internal/operators/throwIfEmpty.js"],"names":["EmptyError","operate","createOperatorSubscriber","throwIfEmpty","errorFactory","defaultErrorFactory","source","subscriber","hasValue","subscribe","value","next","complete","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,OAAO,SAASC,YAAT,GAA0D;AAAA,MAApCC,YAAoC,uEAArBC,mBAAqB;AAC7D,SAAOJ,OAAO,CAAC,UAACK,MAAD,EAASC,UAAT,EAAwB;AACnC,QAAIC,QAAQ,GAAG,KAAf;AACAF,IAAAA,MAAM,CAACG,SAAP,CAAiBP,wBAAwB,CAACK,UAAD,EAAa,UAACG,KAAD,EAAW;AAC7DF,MAAAA,QAAQ,GAAG,IAAX;AACAD,MAAAA,UAAU,CAACI,IAAX,CAAgBD,KAAhB;AACH,KAHwC,EAGtC;AAAA,aAAOF,QAAQ,GAAGD,UAAU,CAACK,QAAX,EAAH,GAA2BL,UAAU,CAACM,KAAX,CAAiBT,YAAY,EAA7B,CAA1C;AAAA,KAHsC,CAAzC;AAIH,GANa,CAAd;AAOH;;AACD,SAASC,mBAAT,GAA+B;AAC3B,SAAO,IAAIL,UAAJ,EAAP;AACH","sourcesContent":["import { EmptyError } from '../util/EmptyError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function throwIfEmpty(errorFactory = defaultErrorFactory) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            subscriber.next(value);\n        }, () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))));\n    });\n}\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n"]},"metadata":{},"sourceType":"module"}