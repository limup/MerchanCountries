{"ast":null,"code":"import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return operate(function (source, subscriber) {\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.next(value);\n      }, delay);\n    }, function () {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.complete();\n      }, delay);\n    }, function (err) {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.error(err);\n      }, delay);\n    }));\n  });\n}","map":{"version":3,"sources":["C:/Users/limup/OneDrive/4- Projetos/7- Tutoriais e Aprendizados/tutorial-projects/MerchanCountries/MerchanCountriesAngular/MerchanCountriesAngular/ClientApp/node_modules/rxjs/dist/esm/internal/operators/observeOn.js"],"names":["executeSchedule","operate","createOperatorSubscriber","observeOn","scheduler","delay","source","subscriber","subscribe","value","next","complete","err","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,yBAAhC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,OAAO,SAASC,SAAT,CAAmBC,SAAnB,EAAyC;AAAA,MAAXC,KAAW,uEAAH,CAAG;AAC5C,SAAOJ,OAAO,CAAC,UAACK,MAAD,EAASC,UAAT,EAAwB;AACnCD,IAAAA,MAAM,CAACE,SAAP,CAAiBN,wBAAwB,CAACK,UAAD,EAAa,UAACE,KAAD;AAAA,aAAWT,eAAe,CAACO,UAAD,EAAaH,SAAb,EAAwB;AAAA,eAAMG,UAAU,CAACG,IAAX,CAAgBD,KAAhB,CAAN;AAAA,OAAxB,EAAsDJ,KAAtD,CAA1B;AAAA,KAAb,EAAqG;AAAA,aAAML,eAAe,CAACO,UAAD,EAAaH,SAAb,EAAwB;AAAA,eAAMG,UAAU,CAACI,QAAX,EAAN;AAAA,OAAxB,EAAqDN,KAArD,CAArB;AAAA,KAArG,EAAuL,UAACO,GAAD;AAAA,aAASZ,eAAe,CAACO,UAAD,EAAaH,SAAb,EAAwB;AAAA,eAAMG,UAAU,CAACM,KAAX,CAAiBD,GAAjB,CAAN;AAAA,OAAxB,EAAqDP,KAArD,CAAxB;AAAA,KAAvL,CAAzC;AACH,GAFa,CAAd;AAGH","sourcesContent":["import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}