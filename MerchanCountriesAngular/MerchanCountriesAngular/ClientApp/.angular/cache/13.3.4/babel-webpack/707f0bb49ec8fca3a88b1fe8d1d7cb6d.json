{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\limup\\\\OneDrive\\\\4- Projetos\\\\7- Tutoriais e Aprendizados\\\\tutorial-projects\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\limup\\\\OneDrive\\\\4- Projetos\\\\7- Tutoriais e Aprendizados\\\\tutorial-projects\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"C:\\\\Users\\\\limup\\\\OneDrive\\\\4- Projetos\\\\7- Tutoriais e Aprendizados\\\\tutorial-projects\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\limup\\\\OneDrive\\\\4- Projetos\\\\7- Tutoriais e Aprendizados\\\\tutorial-projects\\\\MerchanCountries\\\\MerchanCountriesAngular\\\\MerchanCountriesAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AnimationFrameScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(AnimationFrameScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(AnimationFrameScheduler);\n\n  function AnimationFrameScheduler() {\n    _classCallCheck(this, AnimationFrameScheduler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AnimationFrameScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      this._active = true;\n      var flushId = this._scheduled;\n      this._scheduled = undefined;\n      var actions = this.actions;\n      var error;\n      action = action || actions.shift();\n\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n      this._active = false;\n\n      if (error) {\n        while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return AnimationFrameScheduler;\n}(AsyncScheduler);","map":{"version":3,"sources":["C:/Users/limup/OneDrive/4- Projetos/7- Tutoriais e Aprendizados/tutorial-projects/MerchanCountries/MerchanCountriesAngular/MerchanCountriesAngular/ClientApp/node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameScheduler.js"],"names":["AsyncScheduler","AnimationFrameScheduler","action","_active","flushId","_scheduled","undefined","actions","error","shift","execute","state","delay","id","unsubscribe"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,WAAaC,uBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,eAAMC,MAAN,EAAc;AACV,WAAKC,OAAL,GAAe,IAAf;AACA,UAAMC,OAAO,GAAG,KAAKC,UAArB;AACA,WAAKA,UAAL,GAAkBC,SAAlB;AACA,UAAQC,OAAR,GAAoB,IAApB,CAAQA,OAAR;AACA,UAAIC,KAAJ;AACAN,MAAAA,MAAM,GAAGA,MAAM,IAAIK,OAAO,CAACE,KAAR,EAAnB;;AACA,SAAG;AACC,YAAKD,KAAK,GAAGN,MAAM,CAACQ,OAAP,CAAeR,MAAM,CAACS,KAAtB,EAA6BT,MAAM,CAACU,KAApC,CAAb,EAA0D;AACtD;AACH;AACJ,OAJD,QAIS,CAACV,MAAM,GAAGK,OAAO,CAAC,CAAD,CAAjB,KAAyBL,MAAM,CAACW,EAAP,KAAcT,OAAvC,IAAkDG,OAAO,CAACE,KAAR,EAJ3D;;AAKA,WAAKN,OAAL,GAAe,KAAf;;AACA,UAAIK,KAAJ,EAAW;AACP,eAAO,CAACN,MAAM,GAAGK,OAAO,CAAC,CAAD,CAAjB,KAAyBL,MAAM,CAACW,EAAP,KAAcT,OAAvC,IAAkDG,OAAO,CAACE,KAAR,EAAzD,EAA0E;AACtEP,UAAAA,MAAM,CAACY,WAAP;AACH;;AACD,cAAMN,KAAN;AACH;AACJ;AApBL;;AAAA;AAAA,EAA6CR,cAA7C","sourcesContent":["import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}